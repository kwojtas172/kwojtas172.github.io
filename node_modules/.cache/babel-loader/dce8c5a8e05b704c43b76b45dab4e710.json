{"ast":null,"code":"const {\n  GoogleSpreadsheet\n} = require(\"google-spreadsheet\");\n\nconst doc = new GoogleSpreadsheet(\"1HxTJrDrdErdQC5ctSgiU8LBoQHfVioxO-EWk-4PHZLU\");\n\nasync function accessSpreadsheet() {\n  await doc.useServiceAccountAuth(require('../creds-from-google.json'));\n  await doc.loadInfo(); // loads document properties and worksheets\n\n  console.log(doc.title);\n  const sheet = doc.sheetsByIndex[doc.sheetsByIndex.length];\n  const rows = await sheet.getRows();\n  console.log(rows); // await doc.updateProperties({ title: 'renamed doc' });\n  // const sheet = doc.sheetsByIndex[0]; \n  // or use doc.sheetsById[id]\n  // console.log(sheet.title);\n  // console.log(sheet.rowCount);\n} // accessSpreadsheet();\n\n\nexport default accessSpreadsheet;","map":{"version":3,"sources":["D:/Portfolio/portfolio/src/components/spreadsheet.js"],"names":["GoogleSpreadsheet","require","doc","accessSpreadsheet","useServiceAccountAuth","loadInfo","console","log","title","sheet","sheetsByIndex","length","rows","getRows"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAsBC,OAAO,CAAC,oBAAD,CAAnC;;AACA,MAAMC,GAAG,GAAG,IAAIF,iBAAJ,CAAsB,8CAAtB,CAAZ;;AAEA,eAAeG,iBAAf,GAAmC;AAC/B,QAAMD,GAAG,CAACE,qBAAJ,CAA0BH,OAAO,CAAC,2BAAD,CAAjC,CAAN;AAEA,QAAMC,GAAG,CAACG,QAAJ,EAAN,CAH+B,CAGT;;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,KAAhB;AAGA,QAAMC,KAAK,GAAGP,GAAG,CAACQ,aAAJ,CAAkBR,GAAG,CAACQ,aAAJ,CAAkBC,MAApC,CAAd;AACA,QAAMC,IAAI,GAAG,MAAMH,KAAK,CAACI,OAAN,EAAnB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ,EAT+B,CAU/B;AAEA;AACA;AACA;AACA;AACH,C,CAED;;;AAEA,eAAeT,iBAAf","sourcesContent":["const {GoogleSpreadsheet} = require(\"google-spreadsheet\");\r\nconst doc = new GoogleSpreadsheet(\"1HxTJrDrdErdQC5ctSgiU8LBoQHfVioxO-EWk-4PHZLU\");\r\n\r\nasync function accessSpreadsheet() {\r\n    await doc.useServiceAccountAuth(require('../creds-from-google.json'));\r\n\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    console.log(doc.title);\r\n\r\n\r\n    const sheet = doc.sheetsByIndex[doc.sheetsByIndex.length]; \r\n    const rows = await sheet.getRows();\r\n    console.log(rows)\r\n    // await doc.updateProperties({ title: 'renamed doc' });\r\n\r\n    // const sheet = doc.sheetsByIndex[0]; \r\n    // or use doc.sheetsById[id]\r\n    // console.log(sheet.title);\r\n    // console.log(sheet.rowCount);\r\n}\r\n\r\n// accessSpreadsheet();\r\n\r\nexport default accessSpreadsheet;"]},"metadata":{},"sourceType":"module"}