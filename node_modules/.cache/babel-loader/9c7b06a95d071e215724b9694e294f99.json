{"ast":null,"code":"const {\n  GoogleSpreadsheet\n} = require(\"google-spreadsheet\");\n\nconst doc = new GoogleSpreadsheet(\"1HxTJrDrdErdQC5ctSgiU8LBoQHfVioxO-EWk-4PHZLU\");\n\nasync function accessSpreadsheet(name, text, email) {\n  await doc.useServiceAccountAuth(require('../creds-from-google.json'));\n  await doc.loadInfo(); // loads document properties and worksheets\n  // console.log(doc);\n\n  const sheet = await doc.addSheet({\n    headerValues: ['name', 'email', 'text']\n  });\n  await sheet.loadCells;\n  const rows = await sheet.getRows();\n  console.log(sheet.cellStats);\n  console.log(rows);\n} // accessSpreadsheet();\n\n\nexport default accessSpreadsheet;","map":{"version":3,"sources":["D:/Portfolio/portfolio/src/components/spreadsheet.js"],"names":["GoogleSpreadsheet","require","doc","accessSpreadsheet","name","text","email","useServiceAccountAuth","loadInfo","sheet","addSheet","headerValues","loadCells","rows","getRows","console","log","cellStats"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAsBC,OAAO,CAAC,oBAAD,CAAnC;;AACA,MAAMC,GAAG,GAAG,IAAIF,iBAAJ,CAAsB,8CAAtB,CAAZ;;AAEA,eAAeG,iBAAf,CAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoD;AAChD,QAAMJ,GAAG,CAACK,qBAAJ,CAA0BN,OAAO,CAAC,2BAAD,CAAjC,CAAN;AAEA,QAAMC,GAAG,CAACM,QAAJ,EAAN,CAHgD,CAG1B;AACtB;;AAEA,QAAMC,KAAK,GAAG,MAAMP,GAAG,CAACQ,QAAJ,CAAa;AAAEC,IAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB;AAAhB,GAAb,CAApB;AACA,QAAMF,KAAK,CAACG,SAAZ;AAEA,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,OAAN,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,SAAlB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAGH,C,CAED;;;AAEA,eAAeV,iBAAf","sourcesContent":["const {GoogleSpreadsheet} = require(\"google-spreadsheet\");\r\nconst doc = new GoogleSpreadsheet(\"1HxTJrDrdErdQC5ctSgiU8LBoQHfVioxO-EWk-4PHZLU\");\r\n\r\nasync function accessSpreadsheet(name, text, email) {\r\n    await doc.useServiceAccountAuth(require('../creds-from-google.json'));\r\n\r\n    await doc.loadInfo(); // loads document properties and worksheets\r\n    // console.log(doc);\r\n\r\n    const sheet = await doc.addSheet({ headerValues: ['name', 'email', 'text'] });\r\n    await sheet.loadCells\r\n\r\n    const rows = await sheet.getRows();\r\n    console.log(sheet.cellStats)\r\n    console.log(rows)\r\n\r\n\r\n}\r\n\r\n// accessSpreadsheet();\r\n\r\nexport default accessSpreadsheet;"]},"metadata":{},"sourceType":"module"}